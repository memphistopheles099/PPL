Program([ClassDecl(Shape,,[AttributeDecl(Static,ConstDecl(numOfShape,IntType,IntLit(0))),AttributeDecl(Instance,ConstDecl(immuAttribute,IntType,IntLit(0))),AttributeDecl(Instance,ConstDecl(immuAttribute,IntType,StringLit("dsds"))),AttributeDecl(Instance,VarDecl(length,ArrayType(FloatType,IntLit(3)))),AttributeDecl(Instance,VarDecl(width,ArrayType(FloatType,IntLit(3)))),MethodDecl(getNumOfShape,Static,[],IntType,Block([VarDecl(tungson,ArrayType(ClassType(Shape),IntLit(3)))],[Assign(ArrayCell(a,IntLit(8)),Null()),Assign(a,NewExp(Shape,[BinaryOp(/,IntLit(32),IntLit(2)),BinaryOp(%,IntLit(7),IntLit(2))])),Assign(a,UnaryOp(!,BoolLit(false))),Assign(FieldAccess(Self(),aPI),BinaryOp(/,FloatLit(3.14),IntLit(2))),If(BoolLit(true),Call(Self(),gundam,[BoolLit(true)]),Call(Self(),gundam,[BoolLit(false)])),Assign(value,CallExp(x,foo,[IntLit(5)])),Assign(k,CallExp(ArrayCell(p,IntLit(3)),t,[])),Assign(ArrayCell(FieldAccess(Self(),t),IntLit(5)),CallExp(Self(),m,[x])),Assign(FieldAccess(CallExp(ArrayCell(l,IntLit(8)),m,[BinaryOp(%,IntLit(9),IntLit(2))]),a),IntLit(9)),Assign(a,IntLit(1)),Assign(FieldAccess(ArrayCell(l,IntLit(8)),k),BinaryOp(*,value,IntLit(2))),Assign(ArrayCell(FieldAccess(x,b),IntLit(2)),ArrayCell(CallExp(x,m,[]),IntLit(3))),Assign(ArrayCell(a,BinaryOp(+,IntLit(3),CallExp(x,foo,[IntLit(2)]))),BinaryOp(+,ArrayCell(a,ArrayCell(b,IntLit(2))),IntLit(3))),Assign(b,BinaryOp(-,BinaryOp(+,IntLit(3),BinaryOp(*,IntLit(3),ArrayCell(a,BinaryOp(+,IntLit(2),IntLit(3))))),BinaryOp(/,UnaryOp(-,UnaryOp(+,UnaryOp(-,UnaryOp(+,IntLit(2))))),you))),If(BoolLit(true),Return(FieldAccess(ArrayCell(l,IntLit(9)),k)),)])),MethodDecl(getNew,Instance,[param(a,IntType),param(b,FloatType)],FloatType,Block([],[]))]),ClassDecl(Rectangle,Shape,[MethodDecl(getArea,Instance,[],FloatType,Block([],[Return(BinaryOp(*,FieldAccess(Self(),length),FieldAccess(Self(),width)))]))]),ClassDecl(Example1,,[MethodDecl(factorial,Instance,[param(n,IntType)],IntType,Block([],[If(BinaryOp(==,n,IntLit(0)),Return(IntLit(1)),Return(BinaryOp(*,n,CallExp(Self(),factorial,[BinaryOp(-,n,IntLit(1))]))))])),MethodDecl(main,Instance,[],VoidType,Block([VarDecl(x,IntType)],[Assign(x,CallExp(io,readInt,[])),Call(io,writeIntLn,[CallExp(Self(),factorial,[x])])]))]),ClassDecl(Shape,,[AttributeDecl(Instance,VarDecl(length,FloatType)),AttributeDecl(Instance,VarDecl(width,FloatType)),MethodDecl(getArea,Instance,[],FloatType,Block([],[])),MethodDecl(Shape,Instance,[param(length,FloatType),param(width,FloatType)],Block([],[Assign(FieldAccess(Self(),length),length),Assign(FieldAccess(Self(),width),width)]))]),ClassDecl(Rectangle,Shape,[MethodDecl(getArea,Instance,[],FloatType,Block([],[Return(BinaryOp(*,FieldAccess(Self(),length),FieldAccess(Self(),width)))]))]),ClassDecl(Triangle,Shape,[MethodDecl(getArea,Instance,[],FloatType,Block([],[Return(BinaryOp(/,BinaryOp(*,FieldAccess(Self(),length),FieldAccess(Self(),width)),IntLit(2)))]))]),ClassDecl(Example2,,[MethodDecl(main,Instance,[],VoidType,Block([VarDecl(r,FloatType),VarDecl(s,FloatType),VarDecl(s,ClassType(Shape)),VarDecl(a,ArrayType(IntType,IntLit(5))),VarDecl(b,ArrayType(IntType,IntLit(5))),VarDecl(my1stVar,IntType),VarDecl(myArrayVar,ArrayType(IntType,IntLit(5))),VarDecl(my2ndVar,ClassType(Shape)),VarDecl(my3rdVar,ClassType(Shape)),VarDecl(my2ndArray,ArrayType(ClassType(Shape),IntLit(6))),VarDecl(my3rdArray,ArrayType(ClassType(Shape),IntLit(6)))],[Assign(r,FloatLit(2.0)),Assign(s,BinaryOp(*,BinaryOp(*,r,r),CallExp(Self(),myPI,[]))),Assign(ArrayCell(a,IntLit(0)),s),Assign(FieldAccess(Self(),aPI),FloatLit(3.14)),Assign(ArrayCell(l,IntLit(3)),BinaryOp(*,value,IntLit(2))),If(flag,Assign(r,FloatLit(2.0)),Call(io,writeStrLn,[StringLit("Expression is false")])),Assign(s,NewExp(Rectangle,[IntLit(3),IntLit(4)])),Call(io,writeFloatLn,[CallExp(s,getArea,[])]),Assign(s,NewExp(Triangle,[IntLit(3),IntLit(4)])),Call(io,writeFloatLn,[CallExp(s,getArea,[])]),Assign(ArrayCell(a,BinaryOp(+,IntLit(3),ArrayCell(CallExp(x,foo,[IntLit(2)]),IntLit(3)))),BinaryOp(+,ArrayCell(a,ArrayCell(b,IntLit(2))),IntLit(3))),Assign(ArrayCell(FieldAccess(x,b),IntLit(2)),ArrayCell(CallExp(x,m,[IntLit(2)]),IntLit(3)))]))]),ClassDecl(abc,,[MethodDecl(func,Instance,[],VoidType,Block([],[Assign(FieldAccess(FieldAccess(FieldAccess(a,a),a),a),BinaryOp(%,BinaryOp(\,BinaryOp(/,BinaryOp(*,StringLit("abc"),IntLit(1)),UnaryOp(-,UnaryOp(-,UnaryOp(-,UnaryOp(-,UnaryOp(+,UnaryOp(+,UnaryOp(+,UnaryOp(+,UnaryOp(+,IntLit(2))))))))))),IntLit(3)),BinaryOp(^,ArrayCell(IntLit(4),BinaryOp(>,IntLit(1),BinaryOp(==,BinaryOp(&&,IntLit(1),UnaryOp(!,UnaryOp(!,IntLit(1)))),BinaryOp(-,BinaryOp(+,BinaryOp(%,IntLit(1),BinaryOp(^,IntLit(2),IntLit(1))),BinaryOp(\,BinaryOp(/,BinaryOp(*,IntLit(1),UnaryOp(-,UnaryOp(+,UnaryOp(+,UnaryOp(-,UnaryOp(-,UnaryOp(-,UnaryOp(-,UnaryOp(+,UnaryOp(-,IntLit(1))))))))))),IntLit(1)),IntLit(2))),IntLit(1))))),UnaryOp(!,UnaryOp(-,ArrayCell(FieldAccess(NewExp(A,[IntLit(1),IntLit(2),IntLit(3)]),a),IntLit(1))))))),Assign(FieldAccess(a,a),BinaryOp(>,IntLit(1),BinaryOp(==,BinaryOp(&&,IntLit(1),UnaryOp(!,UnaryOp(!,IntLit(1)))),BinaryOp(-,BinaryOp(+,BinaryOp(%,IntLit(1),BinaryOp(^,IntLit(2),IntLit(1))),BinaryOp(\,BinaryOp(/,BinaryOp(*,IntLit(1),UnaryOp(-,UnaryOp(+,UnaryOp(+,UnaryOp(-,UnaryOp(-,UnaryOp(-,UnaryOp(-,UnaryOp(+,UnaryOp(-,IntLit(1))))))))))),IntLit(1)),IntLit(2))),IntLit(1))))),Assign(FieldAccess(a,a),BinaryOp(>,IntLit(1),BinaryOp(<>,IntLit(1),BinaryOp(||,BinaryOp(-,BinaryOp(\,BinaryOp(^,IntLit(1),UnaryOp(!,IntLit(1))),IntLit(1)),BinaryOp(%,IntLit(1),IntLit(1))),IntLit(1))))),Assign(FieldAccess(a,a),CallExp(BinaryOp(>,BinaryOp(==,BinaryOp(||,BinaryOp(&&,BinaryOp(+,BinaryOp(*,IntLit(1),IntLit(1)),BinaryOp(/,IntLit(1),UnaryOp(!,IntLit(1)))),BinaryOp(^,BinaryOp(^,IntLit(1),IntLit(1)),IntLit(1))),IntLit(1)),IntLit(1)),UnaryOp(!,UnaryOp(!,UnaryOp(!,IntLit(1))))),abc,[BinaryOp(>,IntLit(1),BinaryOp(<>,IntLit(1),BinaryOp(||,BinaryOp(-,BinaryOp(\,BinaryOp(^,IntLit(1),UnaryOp(!,IntLit(1))),IntLit(1)),BinaryOp(%,IntLit(1),IntLit(1))),IntLit(1))))])),Assign(FieldAccess(CallExp(CallExp(a,b,[]),c,[]),d),IntLit(2)),Assign(FieldAccess(CallExp(FieldAccess(CallExp(FieldAccess(FieldAccess(NewExp(a,[]),v),b),f,[]),d),f,[]),d),IntLit(1)),Assign(FieldAccess(Self(),aPI),FloatLit(3.14)),Assign(value,CallExp(x,foo,[IntLit(5)])),Assign(ArrayCell(l,IntLit(3)),BinaryOp(*,value,IntLit(2)))]))]),ClassDecl(Shape,,[AttributeDecl(Instance,VarDecl(my1stVar,IntType)),AttributeDecl(Instance,VarDecl(myArrayVar,ArrayType(IntType,IntLit(5)))),AttributeDecl(Static,VarDecl(my2ndVar,ClassType(Shape))),AttributeDecl(Static,VarDecl(my3rdVar,ClassType(Shape))),AttributeDecl(Static,VarDecl(my2ndArray,ArrayType(ClassType(Shape),IntLit(6)))),AttributeDecl(Static,VarDecl(my3rdArray,ArrayType(ClassType(Shape),IntLit(6)))),AttributeDecl(Static,ConstDecl(numOfShape,IntType,IntLit(0))),AttributeDecl(Instance,ConstDecl(immuAttribute,IntType,IntLit(0))),AttributeDecl(Instance,ConstDecl(My1stCons,IntType,BinaryOp(+,IntLit(1),IntLit(5)))),AttributeDecl(Static,ConstDecl(My2ndCons,IntType,IntLit(2))),AttributeDecl(Instance,VarDecl(length,FloatType)),AttributeDecl(Instance,VarDecl(width,FloatType)),MethodDecl(getNumOfShape,Static,[],IntType,Block([],[Return(numOfShape)]))]),ClassDecl(Rectangle,Shape,[MethodDecl(getArea,Instance,[],FloatType,Block([],[Block([VarDecl(r,FloatType),VarDecl(s,FloatType),VarDecl(a,ArrayType(IntType,IntLit(5))),VarDecl(b,ArrayType(IntType,IntLit(5)))],[Assign(r,FloatLit(2.0)),Assign(s,BinaryOp(*,BinaryOp(*,r,r),FieldAccess(Self(),myPI))),Assign(ArrayCell(a,IntLit(0)),s),If(flag,Call(io,writeStrLn,[StringLit("Expression is true")]),Call(io,writeStrLn,[StringLit("Expression is false")]))]),Return(BinaryOp(*,FieldAccess(Self(),length),FieldAccess(Self(),width))),Call(Shape,getNumOfShape,[])]))]),ClassDecl(Shape,,[AttributeDecl(Instance,VarDecl(length,FloatType)),AttributeDecl(Instance,VarDecl(width,FloatType)),MethodDecl(getArea,Instance,[],FloatType,Block([],[])),MethodDecl(Shape,Instance,[param(length,FloatType),param(width,FloatType)],Block([],[Assign(FieldAccess(Self(),length),length),Assign(FieldAccess(Self(),width),width)]))]),ClassDecl(Rectangle,Shape,[MethodDecl(getArea,Instance,[],FloatType,Block([],[Return(BinaryOp(*,FieldAccess(Self(),length),FieldAccess(Self(),width)))]))]),ClassDecl(Triangle,Shape,[MethodDecl(getArea,Instance,[],FloatType,Block([],[Return(BinaryOp(/,BinaryOp(*,FieldAccess(Self(),length),FieldAccess(Self(),width)),IntLit(2)))]))]),ClassDecl(Example2,,[MethodDecl(main,Instance,[],VoidType,Block([VarDecl(s,ClassType(Shape))],[Assign(s,NewExp(Rectangle,[IntLit(3),IntLit(4)])),Call(io,writeFloatLn,[CallExp(s,getArea,[])]),Assign(s,NewExp(Triangle,[IntLit(3),IntLit(4)])),Call(io,writeFloatLn,[CallExp(s,getArea,[])])]))]),ClassDecl(Example1,,[MethodDecl(factorial,Instance,[param(n,IntType)],IntType,Block([],[If(BinaryOp(==,n,IntLit(0)),Return(IntLit(1)),Return(BinaryOp(*,n,CallExp(Self(),factorial,[BinaryOp(-,n,IntLit(1))]))))])),MethodDecl(main,Instance,[],VoidType,Block([VarDecl(x,IntType)],[Assign(x,CallExp(io,readInt,[])),Call(io,writeIntLn,[CallExp(Self(),factorial,[x])])]))]),ClassDecl(abc,def,[AttributeDecl(Instance,ConstDecl(ax,IntType,IntLit(3))),AttributeDecl(Instance,VarDecl(x,ClassType(int)))]),ClassDecl(A,B,[MethodDecl(main,Instance,[param(a,IntType)],VoidType,Block([],[]))]),ClassDecl(A,,[MethodDecl(main,Instance,[param(a,IntType)],VoidType,Block([],[]))]),ClassDecl(Main,,[MethodDecl(main,Instance,[],ArrayType(ClassType(M),IntLit(4)),Block([],[If(BinaryOp(>,a,b),Assign(a,IntLit(3)),),Assign(ArrayCell(FieldAccess(x,b),IntLit(2)),ArrayCell(CallExp(x,m,[]),IntLit(3)))])),MethodDecl(main,Instance,[],ArrayType(ClassType(M),IntLit(4)),Block([],[If(BinaryOp(>,a,b),Assign(a,IntLit(3)),),Call(FieldAccess(CallExp(a,a,[]),a),b,[])]))])])
